{"version":3,"sources":["App.js","index.js"],"names":["App","questions","questionText","answerOptions","answerText","isCorrect","useState","currentQ","setCurrentQ","showScore","setShowScore","score","setScore","className","length","onClick","map","eachAnswer","nextQ","handleAnswerButton","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iKA6GeA,MA3Gf,WAIE,IAAMC,EAAY,CAChB,CACEC,aAAc,kCACdC,cAAe,CACb,CAAEC,WAAY,aAAcC,WAAW,GACvC,CAAED,WAAY,SAAUC,WAAW,GACnC,CAAED,WAAY,aAAcC,WAAW,GACvC,CAAED,WAAY,QAASC,WAAW,GAClC,CAAED,WAAY,UAAWC,WAAW,KAGxC,CACEH,aAAc,sBACdC,cAAe,CACb,CAAEC,WAAY,WAAYC,WAAW,GACrC,CAAED,WAAY,mBAAoBC,WAAW,GAC7C,CAAED,WAAY,eAAgBC,WAAW,GACzC,CAAED,WAAY,cAAeC,WAAW,KAG5C,CACEH,aACE,8DACFC,cAAe,CACb,CAAEC,WAAY,SAAUC,WAAW,GACnC,CAAED,WAAY,OAAQC,WAAW,GACjC,CAAED,WAAY,QAASC,WAAW,GAClC,CAAED,WAAY,QAASC,WAAW,KAGtC,CACEH,aAAc,yCACdC,cAAe,CACb,CAAEC,WAAY,IAAKC,WAAW,GAC9B,CAAED,WAAY,IAAKC,WAAW,GAC9B,CAAED,WAAY,IAAKC,WAAW,GAC9B,CAAED,WAAY,IAAKC,WAAW,MAxCvB,EA6CmBC,mBAAS,GA7C5B,mBA6CNC,EA7CM,KA6CIC,EA7CJ,OA+CqBF,oBAAS,GA/C9B,mBA+CNG,EA/CM,KA+CKC,EA/CL,OAiDaJ,mBAAS,GAjDtB,mBAiDNK,EAjDM,KAiDCC,EAjDD,KA4Eb,OACE,qBAAKC,UAAU,MAAf,SAEGJ,EACC,qCACA,sBAAKI,UAAU,gBAAf,wBACcF,EADd,WAC6BV,EAAUa,UAEvC,wBAAQC,QAdd,WACEP,EAAY,GACZE,EAAa,GACbE,EAAS,IAWL,sBAGA,qCACE,sBAAKC,UAAU,mBAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,6CAAgBN,EAAW,KAD7B,IACwCN,EAAUa,UAElD,qBAAKD,UAAU,gBAAf,SACGZ,EAAUM,GAAUL,kBAGzB,qBAAKW,UAAU,iBAAf,SACGZ,EAAUM,GAAUJ,cAAca,KAAI,SAACC,GAAD,OACrC,wBAAQF,QAAS,kBA9C7B,SAA4BV,GAC1B,IAAIa,EAAQX,EAAW,GAEN,IAAdF,GACDO,EAASD,EAAO,GAIdO,EAAQjB,EAAUa,OAEtBN,EAAYU,GAEZR,GAAa,GAkCoBS,CAAmBF,EAAWZ,YAArD,SAAkEY,EAAWb,wBC9F3FgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.838ced30.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nfunction App() {\n \n\n\n  const questions = [\n    {\n      questionText: \"What is the capital of Vermont?\",\n      answerOptions: [\n        { answerText: \"Burlington\", isCorrect: false },\n        { answerText: \"Milton\", isCorrect: false },\n        { answerText: \"Montpelier\", isCorrect: true },\n        { answerText: \"Essex\", isCorrect: false },\n        { answerText: \"Bristol\", isCorrect: false }\n      ],\n    },\n    {\n      questionText: \"Who is Darth Vader?\",\n      answerOptions: [\n        { answerText: \"Frank Oz\", isCorrect: false },\n        { answerText: \"Anakin Skywalker\", isCorrect: true },\n        { answerText: \"Pedro Pascal\", isCorrect: false },\n        { answerText: \"Your Father\", isCorrect: false },\n      ],\n    },\n    {\n      questionText:\n        \"Which vehicle brand uses a 6 star consellation as its logo?\",\n      answerOptions: [\n        { answerText: \"Subaru\", isCorrect: true },\n        { answerText: \"Audi\", isCorrect: false },\n        { answerText: \"Tesla\", isCorrect: false },\n        { answerText: \"Honda\", isCorrect: false },\n      ],\n    },\n    {\n      questionText: \"How many Harry Potter books are there?\",\n      answerOptions: [\n        { answerText: \"1\", isCorrect: false },\n        { answerText: \"4\", isCorrect: false },\n        { answerText: \"6\", isCorrect: false },\n        { answerText: \"7\", isCorrect: true },\n      ],\n    },\n  ];\n  // Tracks current question\n  const [currentQ, setCurrentQ] = useState(0)\n  // Tracks if we are displaying the score end screen or not\n  const [showScore, setShowScore] = useState(false)\n  // Tracks score\n  const [score, setScore] = useState(0)\n\n  // handles answer button clicks\n  function handleAnswerButton(isCorrect) {\n    let nextQ = currentQ + 1\n    \n    if(isCorrect === true){\n      setScore(score +1)\n\n    }\n\n    if( nextQ < questions.length){\n\n    setCurrentQ(nextQ)\n  } else {\n    setShowScore(true)\n  }\n\n  }\n\n  //Handles reset button click\n  function handleResetButton (){\n    setCurrentQ(0)\n    setShowScore(0)\n    setScore(0)\n  }\n\n  return (\n    <div className=\"App\">\n      {/* Ternary to render either score screen or question screen */}\n      {showScore ? (\n        <>\n        <div className=\"score-section\">\n          You scored {score} out of {questions.length}\n        </div>\n        <button onClick={handleResetButton}>Reset</button>\n        </>\n      ) : (\n        <>\n          <div className=\"question-section\">\n            <div className=\"question-count\">\n              <span>Question {currentQ + 1}</span>/{questions.length}\n            </div>\n            <div className=\"question-text\">\n              {questions[currentQ].questionText}\n            </div>\n          </div>\n          <div className=\"answer-section\">\n            {questions[currentQ].answerOptions.map((eachAnswer)=> (\n              <button onClick={() => handleAnswerButton(eachAnswer.isCorrect)}>{eachAnswer.answerText}</button>\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Styles/index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}